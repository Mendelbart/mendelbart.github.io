$borderRadiusSmall: .5rem;
$transitionHide: 75ms;
$transitionButton: 30ms;
$bodyPaddingInline: .75rem;


/******************** RESET ***********************/
*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
}


/************************* BASE VARS ***********************/
@mixin light-mode {
  --accent-hue: 210deg;
  --accent-secondary-hue: calc(var(--accent-hue) - 5deg);
  --accent-border: hsl(var(--accent-hue), 60%, 50%);
  --accent-border-light: hsla(0, 0%, 100%, 25%);
  --accent-bg: hsl(var(--accent-hue), 73%, 48%);
  --accent-bg-hover: hsl(var(--accent-hue), 73%, 51%);

  --clr-background: #ffffff;
  --clr-surface: var(--clr-background);
  --clr-surface-border: var(--clr-border-soft);
  --clr-symbol-bg: hsla(var(--accent-hue), 30%, 68%, 0.12);
  --clr-input: var(--clr-background);
  --clr-range: hsl(0, 0%, 0%, 0.08);
  --clr-surface-standout: hsl(0, 0%, 95%);

  --clr-border: hsl(0, 0%, 60%);

  --clr-text-soft: hsl(0, 0%, 17%);
  --clr-text: hsl(0, 0%, 10%);

  --clr-text-accent: var(--clr-text);

  --clr-border-soft: #00000035;
  --clr-button: var(--accent-bg);
  --clr-button-hover: hsl(var(--accent-hue), 73%, 50%);
  --clr-button-active: hsl(var(--accent-hue), 73%, 55%);
  --clr-button-text: #ffffff;

  --clr-button-grey: hsl(0, 0%, 50%);
  --clr-button-grey-hover: hsl(0, 0%, 53%);
  --clr-button-grey-active: hsl(0, 0%, 58%);

  --clr-grp-button: transparent;
  --clr-grp-button-border: hsla(0, 0%, 0%, .4);
  --clr-grp-button-hover: hsla(0, 0%, 0%, 0.02);
  --clr-grp-button-active: hsl(var(--accent-hue), 70%, 80%, 0.2);
  --clr-grp-button-checked: hsl(var(--accent-hue), 100%, 68%, 0.17);
  --clr-grp-button-checked-hover: hsl(var(--accent-hue), 100%, 68%, 0.22);
  --clr-grp-button-checked-border: var(--accent-border);
  --clr-grp-button-checked-active: hsl(var(--accent-hue), 70%, 60%, 0.27);

  --clr-grp-button-text: hsl(0, 0%, 40%);
  --clr-grp-button-text-checked: hsl(var(--accent-hue), 64%, 44%);

  --clr-ribbon-button: var(--clr-surface);
  --clr-ribbon-button-hover: hsl(0, 0%, 90%);
  --clr-ribbon-button-active: hsl(0, 0%, 85%);
  --clr-ribbon-button-checked: hsl(0, 0%, 20%);
  --clr-ribbon-button-checked-hover: hsl(0, 0%, 24%);
  --clr-ribbon-button-checked-active: hsl(0, 0%, 28%);

  --text-green: hsl(118.1, 91.9%, 33.9%);
  --text-yellow: hsl(59.2, 100%, 31.2%);
  --text-red: hsl(351.7, 98.8%, 33.1%);
}

@mixin dark-mode {
  --accent-border: hsl(var(--accent-hue), 50%, 50%);
  --accent-border-light: hsla(0, 0%, 100%, 25%);

  --clr-background: hsl(0, 0%, 8%);
  --clr-surface: hsl(0, 0%, 15%);
  --clr-surface-border: var(--clr-surface);
  --clr-symbol-bg: hsl(var(--accent-hue), 100%, 82%, 0.07);
  --clr-input: hsla(0, 0%, 100%, 0.07);
  --clr-range: var(--clr-input);
  --clr-surface-standout: var(--clr-surface);

  --clr-border: hsl(0, 0%, 40%);

  --clr-text-soft: hsl(0, 0%, 87%);
  --clr-text: hsl(0, 0%, 95%);
  --clr-text-accent: #fff;

  --clr-border-soft: #ffffff29;
  --clr-button-hover: hsl(var(--accent-hue), 73%, 50%);
  --clr-button-active: hsl(var(--accent-hue), 73%, 55%);

  --clr-button-grey: hsl(0, 0%, 28%);
  --clr-button-grey-hover: hsl(0, 0%, 33%);
  --clr-button-grey-active: hsl(0, 0%, 38%);

  --clr-grp-button: transparent;
  --clr-grp-button-border: hsla(0, 0%, 100%, .3);
  --clr-grp-button-hover: hsla(0, 0%, 100%, 0.06);
  --clr-grp-button-checked: hsl(var(--accent-hue), 100%, 68%, 0.17);
  --clr-grp-button-checked-hover: hsl(var(--accent-hue), 100%, 68%, 0.22);
  --clr-grp-button-checked-active: hsl(var(--accent-hue), 70%, 68%, 0.27);

  --clr-grp-button-text: hsl(0, 0%, 70%);
  --clr-grp-button-text-checked: hsl(var(--accent-hue), 90%, 72%);

  --clr-ribbon-button-hover: hsl(0, 0%, 20%);
  --clr-ribbon-button-active: hsl(0, 0%, 23%);
  --clr-ribbon-button-checked: var(--clr-text);
  --clr-ribbon-button-checked-active: hsl(0, 0%, 80%);
  --clr-ribbon-button-checked-hover: var(--clr-text-soft);

  --text-green: hsl(118, 70.6%, 66.7%);
  --text-yellow: hsl(53.5, 98.1%, 59.4%);
  --text-red: hsl(351.5, 100%, 69.4%);
}


:root {
  @include light-mode;

  @media (prefers-color-scheme: dark) {
    @include dark-mode;
  }

  --font-scale: 1;
  --font-shift: 0;
  --font-base-size: 1em;
  --letter-spacing: 0ch;
}

.light-mode {
  @include light-mode;
}

.dark-mode {
  @include dark-mode;
}

html {
  color-scheme: dark light;
  background-color: var(--clr-background);
}

body {
  background-color: var(--clr-background);
  color: var(--clr-text);
  font-family: system-ui, sans-serif;
  font-size: 1rem;
  min-height: 100vh;

  max-width: 26rem;
  margin: auto;
  padding: 0.75rem $bodyPaddingInline;
}

.font-transform {
  transform-origin: left center;
  translate: calc(var(--letter-spacing) / 2) calc(var(--font-shift) * 1em);
  letter-spacing: var(--letter-spacing);
}

@mixin hideable {
  visibility: visible;
  opacity: 1;
  transition: opacity $transitionHide ease-out;

  &.hidden {
    @include hidden;
  }
}

@mixin hidden {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0ms $transitionHide, opacity $transitionHide ease-out;
}

.hideable {
  @include hideable;

  &.hidden {
    @include hidden;
  }
}



/****************** HEADINGS ******************/
h1 {
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 1.25;
}

h2 {
  font-weight: 700;
  font-size: 1.4rem;
  margin-block: .75rem .25rem;
}

.track-width {
  --offset-width: 1;
  --client-width: 1;
  --scroll-width: 1;
}

#game-heading {
  display: flex;
  flex-direction: row;
  margin-block-end: .3rem;
  padding-inline: .125rem;

  &> h1 {
    color: var(--clr-text-accent);
    scale: calc(var(--client-width, 1) / var(--scroll-width, 1));
    font-size: calc(var(--font-scale) * 1.8rem);
    height: 2.4rem;
    flex: 1;

    overflow: visible;
    text-wrap: nowrap;
    transform-origin: left center;

    display: flex;
    align-items: end;
  }

  &> button {
    align-self: center;
    padding: .45rem .6rem;
    margin-bottom: .1rem;
  }
}

.element-heading-container {
  display: flex;
  gap: .15ch;

  .heading-element-symbol {
    font-size: 1em;
  }

  &> .heading-element {
    display: flex;
    flex-direction: column;
    align-items: center;

    .heading-element-number {
      font-size: .625rem;
      translate: 0 0.45rem;
      width: 0;
      display: flex;
      justify-content: center;
    }
  }
}


/********************** BUTTONS *******************/
.button-group {
  display: flex;
  gap: .25rem;
  overflow-x: scroll;

  &> .button {
    padding: .4em .625em;
    background: var(--clr-grp-button);
    color: var(--clr-grp-button-text);
    font-weight: 650;
    font-size: 1rem;
    text-wrap: nowrap;
    transition: background $transitionButton, border $transitionButton, color $transitionButton;

    border-radius: 0;
    cursor: pointer;
    user-select: none;
    border: 1px solid var(--clr-grp-button-border);

    &:first-of-type {
      border-top-left-radius: $borderRadiusSmall;
      border-bottom-left-radius: $borderRadiusSmall;
    }

    &:last-of-type {
      border-top-right-radius: $borderRadiusSmall;
      border-bottom-right-radius: $borderRadiusSmall;
    }
  }


  &> input {
    display: none;

    &:disabled + .button {
      opacity: .7;
      cursor: default;
      pointer-events: none;
    }

    &:checked + .button {
      background: var(--clr-grp-button-checked);
      color: var(--clr-grp-button-text-checked);
      border: 1px solid var(--clr-grp-button-checked-border);
    }

    @media(hover: hover) {
      + .button:hover {
        background: var(--clr-grp-button-hover);
      }

      &:checked + .button:hover {
        background: var(--clr-grp-button-checked-hover);
      }
    }

    + .button:active {
      background: var(--clr-grp-button-active);
    }

    &:checked + .button:active {
      background: var(--clr-grp-button-checked-active);
    }
  }
}



button {
  appearance: none;
  -webkit-appearance: none;
  background: var(--clr-button);
  font-weight: 700;
  padding: .5em .7em;
  border: 1px solid var(--clr-border-soft);
  border-radius: $borderRadiusSmall;
  cursor: pointer;
  color: var(--clr-button-text);
  transition: background $transitionButton, border $transitionButton;

  @media (hover: hover) {
    &:hover {
      background: var(--clr-button-hover);
    }
  }

  &:active {
    background: var(--clr-button-active);
  }

  &:focus {
    outline: 2px solid var(--accent-border-light);
    outline-offset: -2px;
  }
}

#stop-game-button {
  @each $suffix in ("", "-hover", "-active") {
    --clr-button#{$suffix}: var(--clr-button-grey#{$suffix});
  }
}

/************************* INPUTS, SELECT ***************/
input[type="text"], select, .item-eval {
  border-radius: $borderRadiusSmall;
  border: 1px solid var(--clr-border-soft);
  color: var(--clr-text);

  &:focus {
    outline: 2px solid var(--accent-border);
    outline-offset: -1px;
  }
}

input[type="text"], .item-eval {
  padding: .5em .625em;
  background: var(--clr-input);
}

input[type="text"] {
  min-width: 0;
}

select {
  font-weight: 550;
  padding: .4em .625em;
  background: var(--clr-surface-standout);
}

.styled-select > select {
  width: 100%;
}

@supports(mask-image: none) {
  .styled-select > select {
    appearance: none;
  }

  .styled-select {
    position: relative;
  }

  .styled-select::after {
    content: "";
    display: block;
    position: absolute;
    background: var(--clr-text);
    mask-image: url("../assets/img/select-arrow.svg");
    mask-repeat: no-repeat;
    mask-position: center;
    height: 100%;
    width: .825rem;
    right: .75rem;
    top: 0;
    pointer-events: none;
  }

  @supports #{'selector(:open)'} {
    .styled-select:has(> select:open)::after {
      rotate: 180deg;
    }
  }
}


input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  background: transparent;
  cursor: pointer;

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    margin-top: -.2rem;
    color: white;
    background: white;
    box-shadow: 0 0 2px hsla(0, 0%, 0%,0.5);
    border: none;
    outline: none;
    cursor: pointer;
    height: 1rem;
    width: 1rem;
    border-radius: 100%;
  }

  &::-moz-range-thumb {
    background: white;
    box-shadow: 0 0 2px hsla(0, 0%, 0%,0.5);
    border: none;
    outline: none;
    cursor: pointer;
  }

  &::-webkit-slider-runnable-track {
    background: #{'linear-gradient(to right, var(--accent-bg) calc(var(--range-progress) * 100%), var(--clr-range) calc(var(--range-progress) * 100%))'};
    height: .6rem;
    border-radius: $borderRadiusSmall;
  }

  &::-moz-range-track {
    background: #{'linear-gradient(to right, var(--accent-bg) calc(var(--range-progress) * 100%), var(--clr-range) calc(var(--range-progress) * 100%))'};
    height: .6rem;
    border-radius: $borderRadiusSmall;
  }

  &:focus {
    outline: none;
  }
}


.slider-container {
  margin-top: -.25rem;
  position: relative;

  .range-min, .range-max {
    display: none;
  }

  .range-value {
    position: absolute;
    right: 0;
    top: -1em;
    font-size: 1rem;
    font-weight: 700;
    color: var(--clr-text-soft);
  }
}


/*********************** SETTINGS ***********************/
.settings {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: .5rem;
}

.labeled-value-element {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: .1rem;

  &> label {
    font-weight: 600;
    font-size: .9rem;
    color: var(--clr-text-soft);
  }
}


#datasetSelect {
  font-size: 1.35rem;
  padding: 0.4rem 0.7rem;

  &> option {
    font-size: 1.125rem;
  }
}

#playButton {
  font-size: 1.2rem;
  padding: 0 .8rem;
}

#game-settings-ribbon {
  margin-block-start: .625rem;

  .ribbon-buttons {
    border-bottom: 1px solid var(--clr-border);
    padding-bottom: .625rem;
  }
}


.ribbon {
  background: var(--clr-surface);
  --padding: .8rem;
  padding: var(--padding);
  border: 1px solid var(--clr-surface-border);
  border-radius: .8rem;
  display: flex;
  flex-direction: column;
  gap: .6rem;
  transition: background $transitionHide, border $transitionHide;

  .ribbon-buttons {
    transition: translate $transitionHide;
    gap: .5rem;
    --clr-grp-button-border: transparent;
    --clr-grp-button-checked-border: transparent;
    --clr-grp-button-text-checked: var(--clr-background);

    @each $suffix in ("", "-hover", "-active", "-checked", "-checked-hover", "-checked-active") {
      --clr-grp-button#{$suffix}: var(--clr-ribbon-button#{$suffix});
    }

    &> .button {
      border-radius: $borderRadiusSmall;
    }
  }

  .ribbon-contents {
    @include hideable;

    &> .ribbon-content.hidden {
      display: none;
    }
  }

  &:has(> .ribbon-contents.hidden) {
    background: transparent;
    border-color: transparent;

    .ribbon-buttons {
      translate: calc(-1 * var(--padding)) calc(-1 * var(--padding));
      
      &> .button {
        --clr-grp-button: var(--clr-surface-standout);
      }
    }
  }
}

#live-settings {
  position: relative;
  margin-block-start: .6rem;
  --clr-surface: var(--clr-surface-standout);
  border-color: transparent;

  .ribbon-buttons {
    position: absolute;
    top: -3rem;
    left: 0;
    translate: 0;
  }
}

#font-settings {
  .font-family-setting > label {
    display: none;
  }
}

#font-settings-button + label {
  transition: background $transitionHide;

  &::before, &::after {
    content: "A";
    font-weight: 700;
  }

  &::before {
    font-size: 1.4rem;
  }

  &::after {
    font-size: 1rem;
  }
}




/************* PLAYING TOGGLE ********************/
.playing {
  #start-game-button {
    display: none;
  }
}

body:not(.playing) {
  #stop-game-button {
    display: none;
  }

  #progress-bar {
    opacity: 0;
  }
}

#game-layers {
  position: relative;
}

#game-container, #new-game-settings {
  @include hideable;
}

body:not(.playing) #game-container, .playing #new-game-settings {
  @include hidden;
}

#game-container, #new-game-settings {
  position: absolute;
  width: 100%;
}

/******************** GAME ******************************/
#progress-bar {
  background: var(--clr-range);
  border-radius: .2rem;
  --height: .4rem;
  height: var(--height);
  width: 100%;
  transition: opacity $transitionHide;

  &::after {
    --gradient-base-size: 0.5;
    --width: var(--progress, 0);
    --gradient-scale: calc((var(--width) * (1 - var(--gradient-base-size)) + var(--gradient-base-size)));

    content: "";
    display: block;
    width: max(calc(var(--width) * 100%), var(--height));
    height: 100%;
    opacity: 1;
    background: linear-gradient(to right, hsl(var(--accent-hue), 90%, 45%), hsl(var(--accent-secondary-hue), 55%, 60%));
    background-size: calc(100% / (var(--gradient-scale) * var(--width)));
    border-radius: inherit;

    transition: width 125ms ease-out;
  }
}

#game-symbols {
  display: flex;
  gap: .6rem;
  align-items: center;
  justify-content: center;
  margin-block: 1rem;
}

#game-inputs {
  display: flex;
  flex-direction: column;
  gap: .625rem;
  margin-block-end: .625rem;
}

#game-footer {
  display: flex;
  align-items: start;
  justify-content: end;
}



/*************** SYMBOLS, EVAL *******************/
.symbol {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: end;

  font-weight: var(--symbol-weight, 400);

  box-sizing: content-box;
  padding: 1.8rem 1.6rem;
  background: var(--clr-symbol-bg);
  border-radius: $borderRadiusSmall;

  pointer-events: none;

  --symbol-size: 5rem;

  &> .symbol-string {
    font-size: calc(var(--font-scale) * var(--symbol-size));
    line-height: var(--symbol-size);
    height: var(--symbol-size);
  }

  &:hover {
    pointer-events: auto;
  }
}

#symbol-current {
  --symbol-size: 6.25rem;
}



.item-eval {
  .solution {
    font-style: italic;
    opacity: .75;
  }

  .submitted:not(:empty) {
    margin-inline-end: .625rem;
  }

  [data-correct="true"] {
    color: var(--text-green);
  }

  [data-correct="partially"] {
    color: var(--text-yellow);
  }

  [data-correct="false"] {
    color: var(--text-red);
  }

  &.best-mode:has([data-correct="true"]) {
    [data-correct="partially"], [data-correct="false"] {
      color: var(--clr-text);
    }
  }
}
